{"mappings":"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","sources":["Desktop/resize app/index.js"],"sourcesContent":["const fileInput = document.querySelector(\"#upload\");\nconst colorPicker = document.querySelector(\"#color-picker\");\nconst widthInput = document.querySelector(\"#width-input\");\nconst heightInput = document.querySelector(\"#height-input\");\nconst bgImagePicker = document.querySelector(\"#imagebg-picker\");\nconst exportButton = document.querySelector(\"#export-button\");\nconst canvas = document.querySelector(\"#canvas\");\nconst context = canvas.getContext(\"2d\");\n\nlet imgToResize = null;\nlet canvasWidth = 700;\nlet canvasHeight = 300;\nlet backgroundColor = 'black';\nlet scale = 1.00;\nlet xOffset = 0;\nlet yOffset = 0;\nlet isDragging = false;\nlet mouseStartX, mouseStartY;\nlet canvasOffsetX, canvasOffsetY;\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    calcOffsetOfCanvas();\n    window.onscroll = function (e) { calcOffsetOfCanvas(); }\n    window.onresize = function (e) { calcOffsetOfCanvas(); }\n    canvas.onresize = function (e) { calcOffsetOfCanvas(); }\n\n    renderCanvas();\n    canvas.onmousedown = handleMouseDown;\n    canvas.onmousemove = handleMouseMove;\n    canvas.onmouseup = handleMouseUp;\n    canvas.onmouseout = handleMouseOut;\n    canvas.onmousewheel = handleScroll;\n});\n\ncolorPicker.addEventListener(\"change\", async (e) => {\n    backgroundColor = e.target.value;\n    renderCanvas();\n});\n\nbgImagePicker.addEventListener(\"change\", async (e) => {\n    renderCanvas();\n});\n\n\nheightInput.addEventListener(\"change\", async (e) => {\n    canvasHeight = e.target.value;\n    renderCanvas();\n});\n\nwidthInput.addEventListener(\"change\", async (e) => {\n    canvasWidth = e.target.value;\n    renderCanvas();\n});\n\nfunction calcOffsetOfCanvas() {\n    const canvasBounds = canvas.getBoundingClientRect();\n    canvasOffsetX = canvasBounds.left;\n    canvasOffsetY = canvasBounds.top;\n}\n\nfunction downloadImage() {\n    console.log('download image')\n    let canvasImage = canvas.toDataURL('image/jpeg');\n\n    let xhr = new XMLHttpRequest();\n    xhr.responseType = 'blob';\n    xhr.onload = function () {\n        let a = document.createElement('a');\n        a.href = window.URL.createObjectURL(xhr.response);\n        a.download = 'ImageResizerDownload.jpg';\n        a.style.display = 'none';\n        document.body.appendChild(a);\n        a.click();\n        a.remove();\n    };\n    xhr.open('GET', canvasImage); \n    xhr.send();\n}\n\nfileInput.addEventListener(\"change\", async (e) => {\n    const [file] = fileInput.files;\n    imgToResize = document.querySelector(\"#imgToResize\");\n    imgToResize.src = await fileToDataUri(file);\n\n    imgToResize.addEventListener(\"load\", () => {\n        renderCanvas();\n    });\n\n    return false;\n});\n\nfunction fileToDataUri(field) {\n    return new Promise((resolve) => {\n        const reader = new FileReader();\n\n        reader.addEventListener(\"load\", () => {\n            resolve(reader.result);\n        });\n\n        reader.readAsDataURL(field);\n    });\n}\n\nfunction renderCanvas() {\n    canvas.width = canvasWidth;\n    canvas.height = canvasHeight;\n\n    context.fillStyle = backgroundColor;\n    context.fillRect(0, 0, canvas.width, canvas.height);\n\n    if (imgToResize) {\n        if (bgImagePicker.checked) {\n            //apply bg blur\n            let blurImage = new Image();\n            blurImage.src = imgToResize.src;\n            context.filter = 'blur(50px)';\n\n\n            context.drawImage(\n                blurImage,\n                -80,\n                -80,\n                canvas.width + 160,\n                canvas.height + 160\n            );\n        }\n\n        context.filter = 'blur(0px)';\n\n        const originalWidth = imgToResize.width;\n        const originalHeight = imgToResize.height;\n\n        const aspectRatio = originalWidth / originalHeight;\n        const width = canvasWidth;\n        const height = width / aspectRatio;\n\n        context.drawImage(\n            imgToResize,\n            xOffset,\n            yOffset,\n            width * scale,\n            height * scale\n        );\n    }\n}\n\n\nfunction handleMouseDown(e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    mouseStartX = parseInt(e.clientX - canvasOffsetX);\n    mouseStartY = parseInt(e.clientY - canvasOffsetY);\n\n    isDragging = true;\n}\n\nfunction handleMouseUp(e) {\n    if (!isDragging) { return; }\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    isDragging = false;\n}\n\nfunction handleMouseOut(e) {\n    if (!isDragging) { return; }\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    isDragging = false;\n}\n\nfunction handleMouseMove(e) {\n    if (!isDragging) { return; }\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    let mouseX = parseInt(e.clientX - canvasOffsetX);\n    let mouseY = parseInt(e.clientY - canvasOffsetY);\n\n    const dx = mouseX - mouseStartX;\n    const dy = mouseY - mouseStartY;\n\n    xOffset += dx;\n    yOffset += dy;\n    \n    renderCanvas();\n\n    mouseStartX = mouseX;\n    mouseStartY = mouseY;\n}\n\nfunction handleScroll(e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (e.deltaY > 0) {\n        scale += 0.01;\n    } else {\n        scale -= 0.01;\n    }\n    renderCanvas();\n}\n\ndocument.addEventListener(\"keydown\", function (e) {\n    switch (e.key) {\n        case \"ArrowLeft\":\n            xOffset -= 3;\n            break;\n        case \"ArrowRight\":\n            xOffset += 3;\n            break;\n        case \"ArrowUp\":\n            yOffset -= 3;\n            break;\n        case \"ArrowDown\":\n            yOffset += 3;\n            break;\n        case \"=\":\n            scale += 0.01;\n            break;\n        case \"-\":\n            scale -= 0.01;\n            break;\n    }\n    renderCanvas();\n})\n\n"],"names":["fileInput","document","querySelector","colorPicker","widthInput","heightInput","bgImagePicker","exportButton","canvas","context","getContext","mouseStartX","mouseStartY","canvasOffsetX","canvasOffsetY","imgToResize","canvasWidth","canvasHeight","backgroundColor","scale","xOffset","yOffset","isDragging","calcOffsetOfCanvas","canvasBounds","getBoundingClientRect","left","top","downloadImage","console","log","canvasImage","toDataURL","xhr","XMLHttpRequest","responseType","onload","a","createElement","href","window","URL","createObjectURL","response","download","style","display","body","appendChild","click","remove","open","send","fileToDataUri","field","Promise","resolve","reader","FileReader","addEventListener","result","readAsDataURL","renderCanvas","width","height","fillStyle","fillRect","checked","blurImage","Image","src","filter","drawImage","originalWidth","originalHeight","handleMouseDown","e","preventDefault","stopPropagation","parseInt","clientX","clientY","handleMouseUp","handleMouseOut","handleMouseMove","mouseX","mouseY","handleScroll","deltaY","onscroll","onresize","onmousedown","onmousemove","onmouseup","onmouseout","onmousewheel","async","target","value","file","files","key"],"version":3,"file":"index.d7214c73.js.map"}